{"ast":null,"code":"import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n  return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n  if (typeof fragmentContext === 'string') {\n    options = html;\n    html = fragmentContext;\n    fragmentContext = null;\n  }\n  const parser = Parser.getFragmentParser(fragmentContext, options);\n  parser.tokenizer.write(html, true);\n  return parser.getFragment();\n}","map":{"version":3,"names":["Parser","defaultTreeAdapter","serialize","serializeOuter","ERR","ErrorCodes","foreignContent","html","Token","Tokenizer","TokenizerMode","parse","options","parseFragment","fragmentContext","parser","getFragmentParser","tokenizer","write","getFragment"],"sources":["/home/shymoon/Desktop/WebDevProjects/basket-world/node_modules/cheerio/node_modules/parse5/dist/index.js"],"sourcesContent":["import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SAAS,gBAAiBD,MAAM,QAAQ,mBAAmB;AAC3D,SAASE,SAAS,EAAEC,cAAc,QAAQ,uBAAuB;AACjE,SAASC,GAAG,IAAIC,UAAU,QAAQ,yBAAyB;AAC3D;AACA,OAAO,KAAKC,cAAc,MAAM,6BAA6B;AAC7D;AACA,OAAO,KAAKC,IAAI,MAAM,kBAAkB;AACxC;AACA,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAC1C;AACA,SAASC,SAAS,EAAEC,aAAa,QAAQ,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACJ,IAAI,EAAEK,OAAO,EAAE;EACjC,OAAOZ,MAAM,CAACW,KAAK,CAACJ,IAAI,EAAEK,OAAO,CAAC;AACtC;AACA,OAAO,SAASC,aAAaA,CAACC,eAAe,EAAEP,IAAI,EAAEK,OAAO,EAAE;EAC1D,IAAI,OAAOE,eAAe,KAAK,QAAQ,EAAE;IACrCF,OAAO,GAAGL,IAAI;IACdA,IAAI,GAAGO,eAAe;IACtBA,eAAe,GAAG,IAAI;EAC1B;EACA,MAAMC,MAAM,GAAGf,MAAM,CAACgB,iBAAiB,CAACF,eAAe,EAAEF,OAAO,CAAC;EACjEG,MAAM,CAACE,SAAS,CAACC,KAAK,CAACX,IAAI,EAAE,IAAI,CAAC;EAClC,OAAOQ,MAAM,CAACI,WAAW,CAAC,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}