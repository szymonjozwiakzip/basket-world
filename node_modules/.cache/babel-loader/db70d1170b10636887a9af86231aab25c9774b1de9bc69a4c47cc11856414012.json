{"ast":null,"code":"import \"../style.scss\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../App.vue\";\nimport plkData from \"../../plk_data.json\";\nimport \"../style.scss\";\nimport PLKIcons from \"../components/JsonMarkers/plkMarkers.json\";\nconst iconPath = \"league-icons\";\nimport L from \"leaflet\";\nexport default {\n  name: \"PLKView\",\n  data() {\n    return {\n      plkData: plkData,\n      activeTab: \"standings\",\n      PLKIcons: PLKIcons // Dodanie ikon PLK do danych komponentu\n    };\n  },\n  methods: {\n    showStandings() {\n      this.activeTab = \"standings\";\n    },\n    showResults() {\n      this.activeTab = \"results\";\n    },\n    showMap() {\n      this.activeTab = \"map\";\n    }\n  }\n};","map":{"version":3,"names":["plkData","PLKIcons","iconPath","L","name","data","activeTab","methods","showStandings","showResults","showMap"],"sources":["/home/shymoon/Desktop/WebDevProjects/basket-world/src/views/Plk.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Season 2023/2024</h1>\n    <label for=\"season\">Choose season:</label>\n    <select id=\"season\">\n      <option value=\"2023-2024\">2023/2024</option>\n    </select>\n\n    <!-- Menu -->\n    <div class=\"menu\">\n      <button @click=\"showStandings\">Standings</button>\n      <button @click=\"showResults\">Results</button>\n      <button @click=\"showMap\">Map</button>\n    </div>\n\n    <!-- Content Area -->\n    <div class=\"content\">\n      <table v-if=\"activeTab === 'standings'\">\n        <!-- Standings Table -->\n        <thead>\n          <tr>\n            <th>Miejsce</th>\n            <th>Drużyna</th>\n            <th>Punkty</th>\n            <th>Mecze</th>\n            <th>Zwycięstwa-Porażki</th>\n            <th>Dom</th>\n            <th>Wyjazd</th>\n            <th>Punkty zdobyte - Punkty stracone</th>\n            <th>Różnica</th>\n            <th>Stosunek</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in plkData\" :key=\"index\">\n            <td>{{ row[0] }}</td>\n            <td>{{ row[2] }}</td>\n            <td>{{ row[3] }}</td>\n            <td>{{ row[4] }}</td>\n            <td>{{ row[5] }}</td>\n            <td>{{ row[6] }}</td>\n            <td>{{ row[7] }}</td>\n            <td>{{ row[8] }}</td>\n            <td>{{ row[9] }}</td>\n            <td>{{ row[10] }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else-if=\"activeTab === 'results'\">\n        <p>Results content goes here.</p>\n      </div>\n      <div v-else-if=\"activeTab === 'map'\">\n        <LMap\n          :center=\"[47, 12.0]\"\n          :zoom=\"4\"\n          style=\"width: 800px; height: 500px\"\n        >\n        </LMap>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport \"../style.scss\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../App.vue\";\nimport plkData from \"../../plk_data.json\";\nimport \"../style.scss\";\nimport PLKIcons from \"../components/JsonMarkers/plkMarkers.json\";\n\nconst iconPath = \"league-icons\";\nimport L from \"leaflet\";\n\nexport default {\n  name: \"PLKView\",\n  data() {\n    return {\n      plkData: plkData,\n      activeTab: \"standings\",\n      PLKIcons: PLKIcons, // Dodanie ikon PLK do danych komponentu\n    };\n  },\n  methods: {\n    showStandings() {\n      this.activeTab = \"standings\";\n    },\n    showResults() {\n      this.activeTab = \"results\";\n    },\n    showMap() {\n      this.activeTab = \"map\";\n    },\n  },\n};\n</script>\n"],"mappings":"AAgEA,OAAO,eAAe;AACtB,OAAO,0BAA0B;AACjC,OAAO,YAAY;AACnB,OAAOA,OAAM,MAAO,qBAAqB;AACzC,OAAO,eAAe;AACtB,OAAOC,QAAO,MAAO,2CAA2C;AAEhE,MAAMC,QAAO,GAAI,cAAc;AAC/B,OAAOC,CAAA,MAAO,SAAS;AAEvB,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLL,OAAO,EAAEA,OAAO;MAChBM,SAAS,EAAE,WAAW;MACtBL,QAAQ,EAAEA,QAAQ,CAAE;IACtB,CAAC;EACH,CAAC;EACDM,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACF,SAAQ,GAAI,WAAW;IAC9B,CAAC;IACDG,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACH,SAAQ,GAAI,SAAS;IAC5B,CAAC;IACDI,OAAOA,CAAA,EAAG;MACR,IAAI,CAACJ,SAAQ,GAAI,KAAK;IACxB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}