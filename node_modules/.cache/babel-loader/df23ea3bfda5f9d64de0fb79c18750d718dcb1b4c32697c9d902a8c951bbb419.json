{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { WebDriver } from \"selenium-webdriver\";\nimport chrome from \"selenium-webdriver/chrome\";\nexport default {\n  name: \"PLKView\",\n  data() {\n    return {\n      isLoading: false,\n      error: null,\n      teams: []\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.isLoading = true;\n\n      // Inicjalizacja przeglądarki Selenium (Chrome)\n      let driver = new WebDriver.Builder().forBrowser(\"chrome\").setChromeOptions(new chrome.Options().headless()) // Opcjonalne: uruchom w trybie bezinterakcyjnym (bez okna)\n      .build();\n\n      // Otwarcie strony z danymi\n      driver.get(\"https://plk.pl/tabele.html\");\n\n      // Poczekaj, aż tabela z danymi się załaduje\n      driver.wait(() => driver.findElement({\n        css: \".tabpages table\"\n      }), 10000).then(() => {\n        // Znajdź tabelę z danymi\n        driver.findElements({\n          css: \".tabpages table tbody tr\"\n        }).then(rows => {\n          // Iteruj przez wszystkie wiersze\n          rows.forEach(row => {\n            // Znajdź wszystkie komórki danych\n            row.findElements({\n              css: \"td\"\n            }).then(cells => {\n              // Pobierz tekst z komórek i dodaj dane do listy\n              cells.then(cells => {\n                cells.map(cell => cell.getText()).then(values => {\n                  this.teams.push({\n                    position: values[0],\n                    name: values[2],\n                    points: values[3]\n                  });\n                });\n              });\n            });\n          });\n        }).then(() => {\n          // Zakończ po zescrapowaniu danych\n          driver.quit();\n          this.isLoading = false;\n        }).catch(error => {\n          console.error(\"Błąd podczas zescrapowania danych:\", error);\n          this.error = \"Wystąpił błąd podczas pobierania danych.\";\n          this.isLoading = false;\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["WebDriver","chrome","name","data","isLoading","error","teams","mounted","fetchData","methods","driver","Builder","forBrowser","setChromeOptions","Options","headless","build","get","wait","findElement","css","then","findElements","rows","forEach","row","cells","map","cell","getText","values","push","position","points","quit","catch","console"],"sources":["/home/shymoon/Desktop/WebDevProjects/basket-world/src/views/Plk.vue"],"sourcesContent":["<template>\n  <div>\n    <router-view />\n    <h1>Witaj w PLK!</h1>\n    <p>To jest widok dla trasy PLK.</p>\n\n    <div v-if=\"isLoading\">Ładowanie danych...</div>\n\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n\n    <div v-if=\"!isLoading && !error\">\n      <table>\n        <thead>\n          <tr>\n            <th>Miejsce</th>\n            <th>Drużyna</th>\n            <th>Punkty</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(team, index) in teams\" :key=\"index\">\n            <td>{{ team.position }}</td>\n            <td>{{ team.name }}</td>\n            <td>{{ team.points }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { WebDriver } from \"selenium-webdriver\";\nimport chrome from \"selenium-webdriver/chrome\";\n\nexport default {\n  name: \"PLKView\",\n  data() {\n    return {\n      isLoading: false,\n      error: null,\n      teams: [],\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.isLoading = true;\n\n      // Inicjalizacja przeglądarki Selenium (Chrome)\n      let driver = new WebDriver.Builder()\n        .forBrowser(\"chrome\")\n        .setChromeOptions(new chrome.Options().headless()) // Opcjonalne: uruchom w trybie bezinterakcyjnym (bez okna)\n        .build();\n\n      // Otwarcie strony z danymi\n      driver.get(\"https://plk.pl/tabele.html\");\n\n      // Poczekaj, aż tabela z danymi się załaduje\n      driver\n        .wait(() => driver.findElement({ css: \".tabpages table\" }), 10000)\n        .then(() => {\n          // Znajdź tabelę z danymi\n          driver\n            .findElements({ css: \".tabpages table tbody tr\" })\n            .then((rows) => {\n              // Iteruj przez wszystkie wiersze\n              rows.forEach((row) => {\n                // Znajdź wszystkie komórki danych\n                row.findElements({ css: \"td\" }).then((cells) => {\n                  // Pobierz tekst z komórek i dodaj dane do listy\n                  cells.then((cells) => {\n                    cells\n                      .map((cell) => cell.getText())\n                      .then((values) => {\n                        this.teams.push({\n                          position: values[0],\n                          name: values[2],\n                          points: values[3],\n                        });\n                      });\n                  });\n                });\n              });\n            })\n            .then(() => {\n              // Zakończ po zescrapowaniu danych\n              driver.quit();\n              this.isLoading = false;\n            })\n            .catch((error) => {\n              console.error(\"Błąd podczas zescrapowania danych:\", error);\n              this.error = \"Wystąpił błąd podczas pobierania danych.\";\n              this.isLoading = false;\n            });\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.error {\n  color: red;\n}\n</style>\n"],"mappings":";AAgCA,SAASA,SAAQ,QAAS,oBAAoB;AAC9C,OAAOC,MAAK,MAAO,2BAA2B;AAE9C,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,IAAI,CAACJ,SAAQ,GAAI,IAAI;;MAErB;MACA,IAAIM,MAAK,GAAI,IAAIV,SAAS,CAACW,OAAO,CAAC,EAChCC,UAAU,CAAC,QAAQ,EACnBC,gBAAgB,CAAC,IAAIZ,MAAM,CAACa,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE;MAAA,CAClDC,KAAK,CAAC,CAAC;;MAEV;MACAN,MAAM,CAACO,GAAG,CAAC,4BAA4B,CAAC;;MAExC;MACAP,MAAK,CACFQ,IAAI,CAAC,MAAMR,MAAM,CAACS,WAAW,CAAC;QAAEC,GAAG,EAAE;MAAkB,CAAC,CAAC,EAAE,KAAK,EAChEC,IAAI,CAAC,MAAM;QACV;QACAX,MAAK,CACFY,YAAY,CAAC;UAAEF,GAAG,EAAE;QAA2B,CAAC,EAChDC,IAAI,CAAEE,IAAI,IAAK;UACd;UACAA,IAAI,CAACC,OAAO,CAAEC,GAAG,IAAK;YACpB;YACAA,GAAG,CAACH,YAAY,CAAC;cAAEF,GAAG,EAAE;YAAK,CAAC,CAAC,CAACC,IAAI,CAAEK,KAAK,IAAK;cAC9C;cACAA,KAAK,CAACL,IAAI,CAAEK,KAAK,IAAK;gBACpBA,KAAI,CACDC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC,CAAC,EAC5BR,IAAI,CAAES,MAAM,IAAK;kBAChB,IAAI,CAACxB,KAAK,CAACyB,IAAI,CAAC;oBACdC,QAAQ,EAAEF,MAAM,CAAC,CAAC,CAAC;oBACnB5B,IAAI,EAAE4B,MAAM,CAAC,CAAC,CAAC;oBACfG,MAAM,EAAEH,MAAM,CAAC,CAAC;kBAClB,CAAC,CAAC;gBACJ,CAAC,CAAC;cACN,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC,EACAT,IAAI,CAAC,MAAM;UACV;UACAX,MAAM,CAACwB,IAAI,CAAC,CAAC;UACb,IAAI,CAAC9B,SAAQ,GAAI,KAAK;QACxB,CAAC,EACA+B,KAAK,CAAE9B,KAAK,IAAK;UAChB+B,OAAO,CAAC/B,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;UAC1D,IAAI,CAACA,KAAI,GAAI,0CAA0C;UACvD,IAAI,CAACD,SAAQ,GAAI,KAAK;QACxB,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}